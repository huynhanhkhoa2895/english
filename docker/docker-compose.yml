version: '3.8'

networks:
    network_config:
        driver: ${APP_NETWORK_DRIVER}
volumes:
    mysql:
        driver: ${VOLUMES_DRIVER}
    redis:
        driver: ${VOLUMES_DRIVER}

services:
    app:
        platform: ${BUILD_PLATFORM}
        container_name: ${APP_CONTAINER_NAME}
        build:
            context: ./app
            args:
                - WORK_DIR=${APP_CODE_PATH_CONTAINER}
                - PHP_VERSION=${PHP_VERSION}
                - COMPOSER_INSTALL=${COMPOSER_INSTALL}
                - NVM_INSTALL=${NVM_INSTALL}
                - YARN_INSTALL=${YARN_INSTALL}
                - NODE_VERSION=${NODE_VERSION}
                - INSTALL_NODE=${INSTALL_NODE}
                - http_proxy
                - https_proxy
                - no_proxy
        tty: true
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
            - ${APP_CRON_LOG_FILE}:/var/log/cron.log
            - ${PHP_INI_FILE_CONFIG}:/etc/php/${PHP_VERSION}/cli/php.ini
            - ${PHP_INI_FILE_CONFIG}:/etc/php/${PHP_VERSION}/fpm/php.ini
        ports:
            - "${NGINX_HTTP_PORT}:80"
            - "${NGINX_HTTPS_PORT}:443"
        depends_on:
            - mysql
        networks:
            - network_config
    mysql:
        platform: ${BUILD_PLATFORM}
        container_name: ${MYSQL_CONTAINER_NAME}
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${APP_TIMEZONE}
        volumes:
            - ${MYSQL_DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
        networks:
            - network_config
